//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoMVCEF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntidadHospital : DbContext
    {
        public EntidadHospital()
            : base("name=EntidadHospital")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EMP> EMP { get; set; }
        public virtual DbSet<DEPT> DEPT { get; set; }
        public virtual DbSet<ENFERMO> ENFERMO { get; set; }
    
        public virtual int eliminarEnfermo(Nullable<int> inscripcion)
        {
            var inscripcionParameter = inscripcion.HasValue ?
                new ObjectParameter("inscripcion", inscripcion) :
                new ObjectParameter("inscripcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarEnfermo", inscripcionParameter);
        }
    
        public virtual ObjectResult<ENFERMO> mostrarEnfermos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENFERMO>("mostrarEnfermos");
        }
    
        public virtual ObjectResult<ENFERMO> mostrarEnfermos(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ENFERMO>("mostrarEnfermos", mergeOption);
        }
    
        public virtual ObjectResult<empleadosInfo_Result> empleadosInfo(Nullable<int> posicion)
        {
            var posicionParameter = posicion.HasValue ?
                new ObjectParameter("posicion", posicion) :
                new ObjectParameter("posicion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<empleadosInfo_Result>("empleadosInfo", posicionParameter);
        }
    
        public virtual ObjectResult<paginacionSimpleDoctores_Result> paginacionSimpleDoctores(Nullable<int> posicion)
        {
            var posicionParameter = posicion.HasValue ?
                new ObjectParameter("posicion", posicion) :
                new ObjectParameter("posicion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paginacionSimpleDoctores_Result>("paginacionSimpleDoctores", posicionParameter);
        }
    }
}
